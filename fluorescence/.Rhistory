colnames(ffssew_fo)[colnames(ffssew_fo)=="Fo_norm"] <- "Value_norm"
colnames(ffsse_fm)[colnames(ffsse_fm)=="Fm"] <- "Value"
colnames(ffssew_fm)[colnames(ffssew_fm)=="Fm"] <- "Value"
colnames(ffssew_fm)[colnames(ffssew_fm)=="Fm_norm"] <- "Value_norm"
#combine stats into one table for field field, each for regualr and for within stats
ffsse_combined_metrics_fofm<-rbind(ffsse_fo,ffsse_fm)
ffssew_combined_metrics_fofm<-rbind(ffssew_fo,ffssew_fm)
ggplot(ffsse_combined_metrics_fofm, aes(x=Time, y=Value, group=interaction(Treatment,Metric), color=Treatment)) +
geom_line(size=0.7, aes(linetype=Metric)) +
labs(title = "Photosynthetic Performance Over Recovery Time\n", x = "Recovery Time (hours)", y = "Photosynthetic Performance\n", color = "Treatment", line = "Metric") +
geom_errorbar(width=.1, aes(ymin=Value-se, ymax=Value+se)) + #betewen group error bars
#geom_errorbar(width=.1, aes(ymin=Value-se, ymax=Value+se), color="black", data=ffssew_combined_metrics) + #within time group error bars
# ylim(0,0.9) +
theme_minimal() +
theme(legend.position="right") +
scale_color_brewer(palette="Set2") +
scale_linetype_discrete(name = "Metric", labels =c("Fm", "Fo")) +
guides(linetype = guide_legend(reverse = TRUE)) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
legend.text=element_text(size=16),
legend.title=element_text(size=16,face="bold"),
title = element_text(size = 20)) +
ylim(0,1050)
#########
##### line graph for fo and fm on UV test samples #####
field.UV
# between and within summary stats for error bars, UV test samples, fo
fUVsse_fo<-summarySE(field.UV, measurevar="Fo", groupvars= c("Time","Treatment"), na.rm=FALSE, conf.interval=.95)
fUVssew_fo<-summarySEwithin(field.UV, measurevar="Fo", withinvars= c("Time","Treatment"),
idvar="site", na.rm=FALSE, conf.interval=.95)
# add measure type to last column so we can change headers to generic names
fUVsse_fo$Metric<-rep("Fo")
fUVssew_fo$Metric<-rep("Fo")
# between and within summary stats for error bars, field samples, fm
fUVsse_fm<-summarySE(field.UV, measurevar="Fm", groupvars= c("Time","Treatment"), na.rm=FALSE, conf.interval=.95)
fUVssew_fm<-summarySEwithin(field.UV, measurevar="Fm", withinvars= c("Time","Treatment"),
idvar="site", na.rm=FALSE, conf.interval=.95)
# add measure type to last column so we can change headers to generic names
fUVsse_fm$Metric<-rep("Fm")
fUVssew_fm$Metric<-rep("Fm")
# change column headers to make generic
colnames(fUVsse_fo)[colnames(fUVsse_fo)=="Fo"] <- "Value"
colnames(fUVssew_fo)[colnames(fUVssew_fo)=="Fo"] <- "Value"
colnames(fUVssew_fo)[colnames(fUVssew_fo)=="Fo_norm"] <- "Value_norm"
colnames(fUVsse_fm)[colnames(fUVsse_fm)=="Fm"] <- "Value"
colnames(fUVssew_fm)[colnames(fUVssew_fm)=="Fm"] <- "Value"
colnames(fUVssew_fm)[colnames(fUVssew_fm)=="Fm_norm"] <- "Value_norm"
#combine stats into one table for field field, each for regualr and for within stats
fUVsse_combined_metrics_fofm<-rbind(fUVsse_fo,fUVsse_fm)
fUVssew_combined_metrics_fofm<-rbind(fUVssew_fo,fUVssew_fm)
ggplot(fUVsse_combined_metrics_fofm, aes(x=Time, y=Value, group=interaction(Treatment,Metric), color=Treatment)) +
geom_line(size=0.7, aes(linetype=Metric)) +
labs(title = "", x = "Recovery Time (hours)", y = "Chlorophyll fluorescence (bits)", color = "Treatment", line = "Metric") +
geom_errorbar(width=.1, aes(ymin=Value-se, ymax=Value+se)) + #betewen group error bars
#geom_errorbar(width=.1, aes(ymin=Value-se, ymax=Value+se), color="black", data=ffssew_combined_metrics) + #within time group error bars
# ylim(0,0.9) +
theme_minimal() +
theme(legend.position="right") +
scale_color_brewer(palette="Set2") +
scale_linetype_discrete(name = "Metric", labels =c("Fm", "Fo")) +
guides(linetype = guide_legend(reverse = TRUE)) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
legend.text=element_text(size=16),
legend.title=element_text(size=16,face="bold"),
title = element_text(size = 20))+
ylim(0,1050)
#
#### line graph for fv/fm on field and UV test samples #####
field
ggplot(fsse_combined_metrics_fvfm, aes(x=Time, y=Value, group=interaction(Treatment,Metric), color=Treatment)) +
geom_line(size=0.7, aes(linetype=Metric)) +
labs(title = "UVTEST samples: Photosynthetic Performance Over Recovery Time\n", x = "Recovery Time (hours)", y = "Photosynthetic Performance\n", color = "Treatment", line = "Metric") +
geom_errorbar(width=.1, aes(ymin=Value-se, ymax=Value+se)) + #betewen group error bars
#geom_errorbar(width=.1, aes(ymin=Value-se, ymax=Value+se), color="black", data=ffssew_combined_metrics) + #within time group error bars
# ylim(0,0.9) +
theme_minimal() +
theme(legend.position="right") +
scale_color_brewer(palette="Set2") +
scale_linetype_discrete(name = "Metric", labels =c("Fm", "Fo")) +
guides(linetype = guide_legend(reverse = TRUE)) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
legend.text=element_text(size=16),
legend.title=element_text(size=16,face="bold"),
title = element_text(size = 20))
# compare UV Test and Field Fv.Fm
field %>% group_by(Treatment,Time) %>%
pairwise_wilcox_test(data = ., Fv.Fm ~ Exp, paired = TRUE) -> stat.test.FvFm.Exp
view(stat.test.FvFm.Exp)
# compare UV Test and Field ePS2R
field %>% group_by(Treatment,Time) %>%
pairwise_wilcox_test(data = ., e.PS2R ~ Exp, paired = TRUE) -> stat.test.ePS2R.Exp
view(stat.test.ePS2R.Exp)
ggplot(fsse_combined_metrics_fvfm, aes(x=Time, y=Value, group=interaction(Treatment,Metric), color=Treatment)) +
geom_line(size=0.7, aes(linetype=Metric)) +
labs(title = "UVTEST samples: Photosynthetic Performance Over Recovery Time\n", x = "Recovery Time (hours)", y = "Photosynthetic Performance\n", color = "Treatment", line = "Metric") +
geom_errorbar(width=.1, aes(ymin=Value-se, ymax=Value+se)) + #betewen group error bars
#geom_errorbar(width=.1, aes(ymin=Value-se, ymax=Value+se), color="black", data=ffssew_combined_metrics) + #within time group error bars
# ylim(0,0.9) +
theme_minimal() +
theme(legend.position="right") +
scale_color_brewer(palette="Set2") +
scale_linetype_discrete(name = "Metric", labels =c("Fm", "Fo")) +
guides(linetype = guide_legend(reverse = TRUE)) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
legend.text=element_text(size=16),
legend.title=element_text(size=16,face="bold"),
title = element_text(size = 20))
field.field <- field %>%
dplyr::filter(Exp == "Field")
field.UV <- field %>%
dplyr::filter(Exp == "UV Test")
stat.test.FvFm.field <- stat.test.FvFm %>%
dplyr::filter(Exp == "Field")
box.box.fvfm<-ggboxplot(field.field, x = "Treatment", y = "Fv.Fm",
fill = "Treatment",
color = "gray30",
size = 0.5,
point.size = 1,
outlier.size = 1,
palette = "Set2",
id = "Site",
line.color = "#4D4D4D66",
facet.by = c("Time"),
panel.labs = list(Time=c("0 hours", "24 hours", "192 hours")),
panel.labs.background = list(color = "black", fill = "black"),
panel.labs.font = list(size=14),
width = 0.7,
xlab = "Recovery time",
ylab = expression("Maximum PSII quantum efficiency (F"[v]*"/F"[m]*")"),
ggtheme = theme_light()) +
stat_pvalue_manual(stat.test.FvFm.field, label = "p.adj.signif")
box.box.fvfm<-ggpar(box.box.fvfm,
legend = "right",
legend.title = "Field Treatment",
font.legend = c(16, "plain"),
font.ytickslab =  c(16, "plain"),
font.y = c(18,"plain"),
font.x = c(18,"bold"),
font.xtickslab =  c(0, "plain"))
box.box.fvfm
UV.reduction<-"#66C2A5" #teal
UV.transmission<-"#FC8D62" #orange
Site.reference<-"#8DA0CB" #purple
field.field <- field %>%
dplyr::filter(Exp == "Field")
field.UV <- field %>%
dplyr::filter(Exp == "UV Test")
stat.test.FvFm.field <- stat.test.FvFm %>%
dplyr::filter(Exp == "Field")
box.box.fvfm<-ggboxplot(field.field, x = "Treatment", y = "Fv.Fm",
fill = "Treatment",
color = "gray30",
size = 0.5,
point.size = 1,
outlier.size = 1,
palette = "Set2",
id = "Site",
line.color = "#4D4D4D66",
facet.by = c("Time"),
panel.labs = list(Time=c("0 hours", "24 hours", "192 hours")),
panel.labs.background = list(color = "black", fill = "black"),
panel.labs.font = list(size=14),
width = 0.7,
xlab = "Recovery time",
ylab = expression("Maximum PSII quantum efficiency (F"[v]*"/F"[m]*")"),
ggtheme = theme_light()) +
stat_pvalue_manual(stat.test.FvFm.field, label = "p.adj.signif")
box.box.fvfm<-ggpar(box.box.fvfm,
legend = "right",
legend.title = "Field Treatment",
font.legend = c(16, "plain"),
font.ytickslab =  c(16, "plain"),
font.y = c(18,"plain"),
font.x = c(18,"bold"),
font.xtickslab =  c(0, "plain"))
box.box.fvfm
UV.filtered<-"#14d2dc" #turquoise
UV.transmitted<-"#fa7850" #orange
Site.reference<-"#8214a0" #purple
box.box.fvfm<-ggboxplot(field.field, x = "Treatment", y = "Fv.Fm",
fill = "Treatment",
color = "gray30",
size = 0.5,
point.size = 1,
outlier.size = 1,
id = "Site",
line.color = "#4D4D4D66",
facet.by = c("Time"),
panel.labs = list(Time=c("0 hours", "24 hours", "192 hours")),
panel.labs.background = list(color = "black", fill = "black"),
panel.labs.font = list(size=14),
width = 0.7,
xlab = "Recovery time",
ylab = expression("Maximum PSII quantum efficiency (F"[v]*"/F"[m]*")"),
ggtheme = theme_light()) +
scale_fill_manual(values=c(UV.filtered, UV.transmitted, Site.reference))
stat_pvalue_manual(stat.test.FvFm.field, label = "p.adj.signif")
box.box.fvfm<-ggpar(box.box.fvfm,
legend = "right",
legend.title = "Field Treatment",
font.legend = c(16, "plain"),
font.ytickslab =  c(16, "plain"),
font.y = c(18,"plain"),
font.x = c(18,"bold"),
font.xtickslab =  c(0, "plain"))
box.box.fvfm
box.box.fvfm<-ggboxplot(field.field, x = "Treatment", y = "Fv.Fm",
fill = "Treatment",
color = "gray30",
size = 0.5,
point.size = 1,
outlier.size = 1,
id = "Site",
line.color = "#4D4D4D66",
facet.by = c("Time"),
panel.labs = list(Time=c("0 hours", "24 hours", "192 hours")),
panel.labs.background = list(color = "black", fill = "black"),
panel.labs.font = list(size=14),
width = 0.7,
xlab = "Recovery time",
ylab = expression("Maximum PSII quantum efficiency (F"[v]*"/F"[m]*")"),
ggtheme = theme_light()) +
scale_fill_manual(values=c(UV.filtered, UV.transmitted, Site.reference)) +
stat_pvalue_manual(stat.test.FvFm.field, label = "p.adj.signif")
box.box.fvfm<-ggpar(box.box.fvfm,
legend = "right",
legend.title = "Field Treatment",
font.legend = c(16, "plain"),
font.ytickslab =  c(16, "plain"),
font.y = c(18,"plain"),
font.x = c(18,"bold"),
font.xtickslab =  c(0, "plain"))
box.box.fvfm
stat.test.ePS2R.field <- stat.test.ePS2R %>%
dplyr::filter(Exp == "Field")
box.box.ePS2R<-ggboxplot(field.field, x = "Treatment", y = "e.PS2R",
fill = "Treatment",
color = "gray30",
size = 0.5,
point.size = 1,
outlier.size = 1,
palette = "Set2",
id = "Site",
line.color = "#4D4D4D66",
facet.by = c("Time"),
panel.labs = list(Time=c("0 hours", "24 hours", "192 hours")),
panel.labs.background = list(color = "black", fill = "black"),
panel.labs.font = list(size=14),
width = 0.7,
xlab = "Recovery time",
ylab = "PSII quantum efficiency (\u03A6PSII)",
ggtheme = theme_light()) +
scale_fill_manual(values=c(UV.filtered, UV.transmitted, Site.reference)) +
stat_pvalue_manual(stat.test.ePS2R.field, label = "p.adj.signif")
box.box.ePS2R<-ggboxplot(field.field, x = "Treatment", y = "e.PS2R",
fill = "Treatment",
color = "gray30",
size = 0.5,
point.size = 1,
outlier.size = 1,
id = "Site",
line.color = "#4D4D4D66",
facet.by = c("Time"),
panel.labs = list(Time=c("0 hours", "24 hours", "192 hours")),
panel.labs.background = list(color = "black", fill = "black"),
panel.labs.font = list(size=14),
width = 0.7,
xlab = "Recovery time",
ylab = "PSII quantum efficiency (\u03A6PSII)",
ggtheme = theme_light()) +
scale_fill_manual(values=c(UV.filtered, UV.transmitted, Site.reference)) +
stat_pvalue_manual(stat.test.ePS2R.field, label = "p.adj.signif")
box.box.ePS2R<-ggpar(box.box.ePS2R,
legend = "right",
legend.title = "Field Treatment",
font.legend = c(16, "plain"),
font.ytickslab =  c(16, "plain"),
font.y = c(18,"plain"),
font.x = c(18,"bold"),
font.xtickslab =  c(0, "plain"))
box.box.ePS2R
field.field
ffsse_fvfm<-summarySE(field.field, measurevar="Fv.Fm", groupvars= c("Time","Treatment","Exp"), na.rm=FALSE, conf.interval=.95)
ffssew_fvfm<-summarySEwithin(field.field, measurevar="Fv.Fm", withinvars= c("Time","Treatment","Exp"),
idvar="site", na.rm=FALSE, conf.interval=.95)
ffsse_fvfm$Metric<-rep("Fv.Fm")
ffssew_fvfm$Metric<-rep("Fv.Fm")
ffsse_eps2r<-summarySE(field.field, measurevar="e.PS2R", groupvars= c("Time","Treatment","Exp"), na.rm=FALSE, conf.interval=.95)
ffssew_eps2r<-summarySEwithin(field.field, measurevar="e.PS2R", withinvars= c("Time","Treatment","Exp"),
idvar="site", na.rm=FALSE, conf.interval=.95)
ffsse_eps2r$Metric<-rep("e.PS2R")
ffssew_eps2r$Metric<-rep("e.PS2R")
# change column headers to make generic
colnames(ffsse_fvfm)[colnames(ffsse_fvfm)=="Fv.Fm"] <- "Value"
colnames(ffssew_fvfm)[colnames(ffssew_fvfm)=="Fv.Fm"] <- "Value"
colnames(ffssew_fvfm)[colnames(ffssew_fvfm)=="Fv.Fm_norm"] <- "Value_norm"
colnames(ffsse_eps2r)[colnames(ffsse_eps2r)=="e.PS2R"] <- "Value"
colnames(ffssew_eps2r)[colnames(ffssew_eps2r)=="e.PS2R"] <- "Value"
colnames(ffssew_eps2r)[colnames(ffssew_eps2r)=="e.PS2R_norm"] <- "Value_norm"
#combine stats into one table for field field, each for regualr and for within stats
ffsse_combined_metrics<-rbind(ffsse_fvfm,ffsse_eps2r)
ffssew_combined_metrics<-rbind(ffssew_fvfm,ffssew_eps2r)
field.UV
fUVsse_fvfm<-summarySE(field.UV, measurevar="Fv.Fm", groupvars= c("Time","Treatment","Exp"), na.rm=FALSE, conf.interval=.95)
fUVssew_fvfm<-summarySEwithin(field.UV, measurevar="Fv.Fm", withinvars= c("Time","Treatment","Exp"),
idvar="site", na.rm=FALSE, conf.interval=.95)
fUVsse_fvfm$Metric<-rep("Fv.Fm")
fUVssew_fvfm$Metric<-rep("Fv.Fm")
# change column headers to make generic
colnames(fUVsse_fvfm)[colnames(fUVsse_fvfm)=="Fv.Fm"] <- "Value"
colnames(fUVssew_fvfm)[colnames(fUVssew_fvfm)=="Fv.Fm"] <- "Value"
colnames(fUVssew_fvfm)[colnames(fUVssew_fvfm)=="Fv.Fm_norm"] <- "Value_norm"
fUVsse_eps2r<-summarySE(field.UV, measurevar="e.PS2R", groupvars= c("Time","Treatment","Exp"), na.rm=FALSE, conf.interval=.95)
fUVssew_eps2r<-summarySEwithin(field.UV, measurevar="e.PS2R", withinvars= c("Time","Treatment","Exp"),
idvar="site", na.rm=FALSE, conf.interval=.95)
fUVsse_eps2r$Metric<-rep("e.PS2R")
fUVssew_eps2r$Metric<-rep("e.PS2R")
# change column headers to make generic
colnames(fUVsse_eps2r)[colnames(fUVsse_eps2r)=="e.PS2R"] <- "Value"
colnames(fUVssew_eps2r)[colnames(fUVssew_eps2r)=="e.PS2R"] <- "Value"
colnames(fUVssew_eps2r)[colnames(fUVssew_eps2r)=="e.PS2R_norm"] <- "Value_norm"
#combine stats into one table for UV test, each for regualr and for within stats
fUVsse_combined_metrics<-rbind(fUVsse_fvfm,fUVsse_eps2r)
fUVssew_combined_metrics<-rbind(fUVssew_fvfm,fUVssew_eps2r)
ffUVsse_combined_metrics<-rbind(ffsse_combined_metrics,fUVsse_combined_metrics)
ffUVssew_combined_metrics<-rbind(ffssew_combined_metrics,fUVssew_combined_metrics)
colnames(ffUVsse_combined_metrics)[colnames(ffUVsse_combined_metrics)=="Exp"] <- "LabTreatment"
colnames(ffUVssew_combined_metrics)[colnames(ffUVssew_combined_metrics)=="Exp"] <- "LabTreatment"
ffUVsse_combined_metrics$LabTreatment <- factor(ffUVsse_combined_metrics$LabTreatment,levels = c("Field", "UV Test"))
ffUVssew_combined_metrics$LabTreatment <- factor(ffUVssew_combined_metrics$LabTreatment,levels = c("Field", "UV Test"))
LegendTitle_color <- "Field Treatment"
LegendTitle_line <- "Lab Treatment"
ffUVsse_combined_metrics %>% filter(., Metric == "Fv.Fm") %>%
ggplot(., aes(x=Time, y=Value, group=interaction(LabTreatment, Treatment), color=Treatment)) +
geom_line(size=0.7, aes(linetype=LabTreatment)) +
labs(x = "Recovery Time (hours)", y = "Maximum potential PSII quantum efficency (Fv/Fm)", color = "Treatment", line = "Lab Treatment") +
geom_errorbar(width=.1, aes(ymin=Value-se, ymax=Value+se)) + #betewen group error bars
#geom_errorbar(width=.1, aes(ymin=Value-se, ymax=Value+se), color="black", data=ffssew_combined_metrics) + #within time group error bars
ylim(0,0.9) +
theme_minimal() +
theme(legend.position="right") +
scale_color_manual(values=c(UV.filtered, UV.transmitted, Site.reference)) +
scale_linetype_discrete(name = "Lab Treatment", labels=c("UV Dose","None")) +
guides(linetype = guide_legend(reverse = TRUE)) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
legend.text=element_text(size=16),
legend.title=element_text(size=16,face="bold"),
title = element_text(size = 20))+
labs(
color = LegendTitle_color,
linetype = LegendTitle_line
) +
annotate("text", x = "24", y = 0.7, label = "**", size = 5)
ffUVsse_combined_metrics %>% filter(., Metric == "e.PS2R") %>%
ggplot(., aes(x=Time, y=Value, group=interaction(LabTreatment, Treatment), color=Treatment)) +
geom_line(size=0.7, aes(linetype=LabTreatment)) +
labs(x = "Recovery Time (hours)", y = "PSII operating quantum efficency (PPSII)", color = "Treatment", line = "Lab Treatment") +
geom_errorbar(width=.1, aes(ymin=Value-se, ymax=Value+se)) + #betewen group error bars
#geom_errorbar(width=.1, aes(ymin=Value-se, ymax=Value+se), color="black", data=ffssew_combined_metrics) + #within time group error bars
ylim(0,0.7) +
theme_minimal() +
theme(legend.position="right") +
scale_color_manual(values=c(UV.filtered, UV.transmitted, Site.reference)) +
scale_linetype_discrete(name = "Lab Treatment", labels=c("UV Dose","None")) +
guides(linetype = guide_legend(reverse = TRUE)) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
legend.text=element_text(size=16),
legend.title=element_text(size=16,face="bold"),
title = element_text(size = 20))+
labs(
color = LegendTitle_color,
linetype = LegendTitle_line
)+
annotate("text", x = "24", y = 0.47, label = "*", size = 5, color = UV.transmitted)
field.field
ffsse_fo<-summarySE(field.field, measurevar="Fo", groupvars= c("Time","Treatment"), na.rm=FALSE, conf.interval=.95)
ffssew_fo<-summarySEwithin(field.field, measurevar="Fo", withinvars= c("Time","Treatment"),
idvar="site", na.rm=FALSE, conf.interval=.95)
ffsse_fo$Metric<-rep("Fo")
ffssew_fo$Metric<-rep("Fo")
ffsse_fm<-summarySE(field.field, measurevar="Fm", groupvars= c("Time","Treatment"), na.rm=FALSE, conf.interval=.95)
ffssew_fm<-summarySEwithin(field.field, measurevar="Fm", withinvars= c("Time","Treatment"),
idvar="site", na.rm=FALSE, conf.interval=.95)
ffsse_fm$Metric<-rep("Fm")
ffssew_fm$Metric<-rep("Fm")
# change column headers to make generic
colnames(ffsse_fo)[colnames(ffsse_fo)=="Fo"] <- "Value"
colnames(ffssew_fo)[colnames(ffssew_fo)=="Fo"] <- "Value"
colnames(ffssew_fo)[colnames(ffssew_fo)=="Fo_norm"] <- "Value_norm"
colnames(ffsse_fm)[colnames(ffsse_fm)=="Fm"] <- "Value"
colnames(ffssew_fm)[colnames(ffssew_fm)=="Fm"] <- "Value"
colnames(ffssew_fm)[colnames(ffssew_fm)=="Fm_norm"] <- "Value_norm"
#combine stats into one table for field field, each for regualr and for within stats
ffsse_combined_metrics_fofm<-rbind(ffsse_fo,ffsse_fm)
ffssew_combined_metrics_fofm<-rbind(ffssew_fo,ffssew_fm)
ggplot(ffsse_combined_metrics_fofm, aes(x=Time, y=Value, group=interaction(Treatment,Metric), color=Treatment)) +
geom_line(size=0.7, aes(linetype=Metric)) +
labs(title = "Photosynthetic Performance Over Recovery Time\n", x = "Recovery Time (hours)", y = "Photosynthetic Performance\n", color = "Treatment", line = "Metric") +
geom_errorbar(width=.1, aes(ymin=Value-se, ymax=Value+se)) + #betewen group error bars
#geom_errorbar(width=.1, aes(ymin=Value-se, ymax=Value+se), color="black", data=ffssew_combined_metrics) + #within time group error bars
# ylim(0,0.9) +
theme_minimal() +
theme(legend.position="right") +
scale_color_brewer(palette="Set2") +
scale_linetype_discrete(name = "Metric", labels =c("Fm", "Fo")) +
guides(linetype = guide_legend(reverse = TRUE)) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
legend.text=element_text(size=16),
legend.title=element_text(size=16,face="bold"),
title = element_text(size = 20)) +
ylim(0,1050)
field.UV
ggplot(ffsse_combined_metrics_fofm, aes(x=Time, y=Value, group=interaction(Treatment,Metric), color=Treatment)) +
geom_line(size=0.7, aes(linetype=Metric)) +
labs(title = "Photosynthetic Performance Over Recovery Time\n", x = "Recovery Time (hours)", y = "Photosynthetic Performance\n", color = "Treatment", line = "Metric") +
geom_errorbar(width=.1, aes(ymin=Value-se, ymax=Value+se)) + #betewen group error bars
#geom_errorbar(width=.1, aes(ymin=Value-se, ymax=Value+se), color="black", data=ffssew_combined_metrics) + #within time group error bars
# ylim(0,0.9) +
theme_minimal() +
theme(legend.position="right") +
scale_color_manual(values=c(UV.filtered, UV.transmitted, Site.reference)) +
scale_linetype_discrete(name = "Metric", labels =c("Fm", "Fo")) +
guides(linetype = guide_legend(reverse = TRUE)) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
legend.text=element_text(size=16),
legend.title=element_text(size=16,face="bold"),
title = element_text(size = 20)) +
ylim(0,1050)
field.UV
fUVsse_fo<-summarySE(field.UV, measurevar="Fo", groupvars= c("Time","Treatment"), na.rm=FALSE, conf.interval=.95)
fUVssew_fo<-summarySEwithin(field.UV, measurevar="Fo", withinvars= c("Time","Treatment"),
idvar="site", na.rm=FALSE, conf.interval=.95)
fUVsse_fo$Metric<-rep("Fo")
fUVssew_fo$Metric<-rep("Fo")
fUVsse_fm<-summarySE(field.UV, measurevar="Fm", groupvars= c("Time","Treatment"), na.rm=FALSE, conf.interval=.95)
fUVssew_fm<-summarySEwithin(field.UV, measurevar="Fm", withinvars= c("Time","Treatment"),
idvar="site", na.rm=FALSE, conf.interval=.95)
fUVsse_fm$Metric<-rep("Fm")
fUVssew_fm$Metric<-rep("Fm")
# change column headers to make generic
colnames(fUVsse_fo)[colnames(fUVsse_fo)=="Fo"] <- "Value"
colnames(fUVssew_fo)[colnames(fUVssew_fo)=="Fo"] <- "Value"
colnames(fUVssew_fo)[colnames(fUVssew_fo)=="Fo_norm"] <- "Value_norm"
colnames(fUVsse_fm)[colnames(fUVsse_fm)=="Fm"] <- "Value"
colnames(fUVssew_fm)[colnames(fUVssew_fm)=="Fm"] <- "Value"
colnames(fUVssew_fm)[colnames(fUVssew_fm)=="Fm_norm"] <- "Value_norm"
#combine stats into one table for field field, each for regualr and for within stats
fUVsse_combined_metrics_fofm<-rbind(fUVsse_fo,fUVsse_fm)
fUVssew_combined_metrics_fofm<-rbind(fUVssew_fo,fUVssew_fm)
ggplot(fUVsse_combined_metrics_fofm, aes(x=Time, y=Value, group=interaction(Treatment,Metric), color=Treatment)) +
geom_line(size=0.7, aes(linetype=Metric)) +
labs(title = "", x = "Recovery Time (hours)", y = "Chlorophyll fluorescence (bits)", color = "Treatment", line = "Metric") +
geom_errorbar(width=.1, aes(ymin=Value-se, ymax=Value+se)) + #betewen group error bars
#geom_errorbar(width=.1, aes(ymin=Value-se, ymax=Value+se), color="black", data=ffssew_combined_metrics) + #within time group error bars
# ylim(0,0.9) +
theme_minimal() +
theme(legend.position="right") +
scale_color_brewer(palette="Set2") +
scale_linetype_discrete(name = "Metric", labels =c("Fm", "Fo")) +
guides(linetype = guide_legend(reverse = TRUE)) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
legend.text=element_text(size=16),
legend.title=element_text(size=16,face="bold"),
title = element_text(size = 20))+
ylim(0,1050)
field
ggplot(fUVsse_combined_metrics_fofm, aes(x=Time, y=Value, group=interaction(Treatment,Metric), color=Treatment)) +
geom_line(size=0.7, aes(linetype=Metric)) +
labs(title = "", x = "Recovery Time (hours)", y = "Chlorophyll fluorescence (bits)", color = "Treatment", line = "Metric") +
geom_errorbar(width=.1, aes(ymin=Value-se, ymax=Value+se)) + #betewen group error bars
#geom_errorbar(width=.1, aes(ymin=Value-se, ymax=Value+se), color="black", data=ffssew_combined_metrics) + #within time group error bars
# ylim(0,0.9) +
theme_minimal() +
theme(legend.position="right") +
scale_color_manual(values=c(UV.filtered, UV.transmitted, Site.reference)) +
scale_linetype_discrete(name = "Metric", labels =c("Fm", "Fo")) +
guides(linetype = guide_legend(reverse = TRUE)) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
legend.text=element_text(size=16),
legend.title=element_text(size=16,face="bold"),
title = element_text(size = 20))+
ylim(0,1050)
field
ggplot(fsse_combined_metrics_fvfm, aes(x=Time, y=Value, group=interaction(Treatment,Metric), color=Treatment)) +
geom_line(size=0.7, aes(linetype=Metric)) +
labs(title = "UVTEST samples: Photosynthetic Performance Over Recovery Time\n", x = "Recovery Time (hours)", y = "Photosynthetic Performance\n", color = "Treatment", line = "Metric") +
geom_errorbar(width=.1, aes(ymin=Value-se, ymax=Value+se)) + #betewen group error bars
#geom_errorbar(width=.1, aes(ymin=Value-se, ymax=Value+se), color="black", data=ffssew_combined_metrics) + #within time group error bars
# ylim(0,0.9) +
theme_minimal() +
theme(legend.position="right") +
scale_color_manual(values=c(UV.filtered, UV.transmitted, Site.reference)) +
scale_linetype_discrete(name = "Metric", labels =c("Fm", "Fo")) +
guides(linetype = guide_legend(reverse = TRUE)) +
theme(axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
legend.text=element_text(size=16),
legend.title=element_text(size=16,face="bold"),
title = element_text(size = 20))
field %>% group_by(Treatment,Time) %>%
pairwise_wilcox_test(data = ., Fv.Fm ~ Exp, paired = TRUE) -> stat.test.FvFm.Exp
view(stat.test.FvFm.Exp)
